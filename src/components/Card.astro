---
// src/components/Card.astro
export interface Props {
  linkKey: string;
  linkValue: string;
  index: number;
}

const { linkKey, linkValue, index } = Astro.props;
---

<a href={`/${linkKey}`} class="group perspective" data-index={index}>
  <div class="relative bg-white rounded-xl shadow-xl p-6 transition-all duration-500 ease-out hover:scale-105 hover:rotate-1 hover:shadow-2xl transform preserve-3d">
    <div class="absolute inset-0 bg-gradient-to-br from-beige-200 to-chocolate-200 opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded-xl -z-10"></div>
    <h2 class="text-3xl font-bold mb-4 text-chocolate-700 group-hover:text-chocolate-900 transition-colors duration-300">{linkKey}</h2>
    <p class="text-sm text-chocolate-600 group-hover:text-chocolate-800 transition-colors duration-300 truncate">{linkValue}</p>
    <div class="absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-beige-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
      </svg>
    </div>
  </div>
</a>

<style>
  @keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
  }

  .perspective:hover {
    animation: float 3s ease-in-out infinite;
  }
</style>

<script>
  const card = document.currentScript.parentElement;
  
  card.addEventListener('mousemove', e => {
    const rect = card.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    const centerX = rect.width / 2;
    const centerY = rect.height / 2;
    const rotateX = (y - centerY) / 10;
    const rotateY = (centerX - x) / 10;
    card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale3d(1.05, 1.05, 1.05)`;
  });

  card.addEventListener('mouseleave', () => {
    card.style.transform = '';
  });
</script>